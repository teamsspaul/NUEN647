#!/usr/bin/env python3

################################################################
##################### Import packages ##########################
################################################################

import time
start_time = time.time()
import FUN as fun

################################################################
######################## Set up ################################
################################################################


output=open("All_Calcs.csv","w")
print("alpha,beta,SumErr",file=output)

#Loop through all possibilities
alphaL=fun.np.linspace(1,20,3);
betaL=fun.np.linspace(1,20,3);
xL=[1,1.5,3,5];
Measured=[0.201131,0.110135,0.0228748,0.0032849]

################################################################
##################### Brute Force ##############################
################################################################

SumErrs=[]
for alpha in alphaL:
    for beta in betaL:
        Error=0
        for i in range(0,len(xL)):
            x=xL[i]
            c0=(fun.Determine_cn(0,alpha,beta,x))
            Error=Error+abs(c0-Measured[i])/Measured[i]
        SumErrs.append(Error)
        print(str(alpha)+","+str(beta)+','+str(Error),file=output)


################################################################
#################### Find Minimum ##############################
################################################################

        
#Find minimium Summed Error
Min=min(SumErrs)
Count=0
for alpha in alphaL:
    for beta in betaL:
        if SumErrs[Count]==Min:
            print("Min of Summed Errors: %.2f, " % Min +
                  "alpha: %.3f, " % alpha +
                  'beta: %.3f, ' % beta)

        Count=Count+1

###################### Time To execute #################

print("--- %s seconds ---" % (time.time() - start_time))
