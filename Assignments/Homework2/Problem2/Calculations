#!/usr/bin/env python3

################################################################
##################### Import packages ##########################
################################################################

import numpy as np
import time
start_time = time.time()
import Functions as Fun

################################################################
##################### Calculations #############################
################################################################

Error=[];Ntimes=1000;Nsamples=100;CountOut=0

for i in range(0,Ntimes):

    Positive=True
    Negative=True
    while(Positive or Negative):
        
        X1=np.random.uniform(-1,1,Nsamples)
        X2=np.random.uniform(-1,1,Nsamples)
        rho=Fun.CalculateRho(X1,X2)
        
        if rho>0:
            rho1=rho;X11=X1;X21=X2;
            Positive=False
        if rho<0:
            rho2=rho;X12=X1;X22=X2;
            Negative=False
        

    rho_Guess=(rho1+rho2)/2

    X13=np.append(X11,X12)
    X23=np.append(X21,X22)
    rho=Fun.CalculateRho(X13,X23)
    
    if(rho>rho1 or rho<rho2):
        CountOut=CountOut+1
    Error.append((abs(rho_Guess-rho)/rho)*100)

Fun.PlotHistSave(Error,Ntimes)

print("Percent outside rho1 and rho2: "+str(100*CountOut/Ntimes)+"%")

###################### Time To execute #################

print("--- %s seconds ---" % (time.time() - start_time))
