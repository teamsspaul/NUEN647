#!/usr/bin/env python3.5

################################################################
##################### Import packages ##########################
################################################################

import time
start_time = time.time()
import scipy.special as sps
import numpy as np
#import matplotlib.pyplot as plt
#import matplotlib
import random as rn
import Functions as fun
import copy

import sys
print(sys.version)

################################################################
######################## Calculations ##########################
################################################################

#Values go to 10^-6 around 26.245
N=100;alpha=1;beta=0.5;a=0;b=26.245;h=0.5;Nsamples=10**4

theta=np.linspace(a,b,N) 
f_x=fun.GammaPDF(alpha,beta,theta)
        
#(fig,ax)=fun.Plot(theta,f_x)

# OutsideSquare=0;OutsideTri=0
# for i in range(0,Nsamples):
#     X=rn.uniform(a,b);Xt=copy.copy(X)
#     Y=rn.uniform(0,h);Yt=copy.copy(Y)
    
#     if Y>(-h/b)*X+h: #Triangular
#         Xt=b-Xt
#         Yt=h-Yt
        
#     H=fun.GammaPDF(alpha,beta,X) #Square
#     Ht=fun.GammaPDF(alpha,beta,Xt) #Triangle
    
#     if(Y<H): #Square
#         ax=fun.PlotaxIn(X,Y,i,ax,1)
#     else:
#         OutsideSquare=OutsideSquare+1
#         ax=fun.PlotaxOut(X,Y,i,ax,1)
        
#     if(Yt<Ht): #Triangular
#         ax=fun.PlotaxIn(Xt,Yt,i,ax,2)
#     else:
#         OutsideTri=OutsideTri+1
#         ax=fun.PlotaxOut(Xt,Yt,i,ax,2)

# ax=fun.Plotlegend(ax,theta,f_x)

# RejectionSq=OutsideSquare/Nsamples;RejectionTri=OutsideTri/Nsamples

# print("Square = "+str(RejectionSq)+" Triangle = "+str(RejectionTri))
# plt.savefig('P4F1.pdf')

# ###################### Time To execute #################
print("--- %s seconds ---" % (time.time() - start_time))
