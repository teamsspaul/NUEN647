#!/usr/bin/env python3

#Please note, might have to run command
# sed -i 's/E /E\+/g' TAPE9_BANK.inp
# on file to make sure there are no spaces after E's

#####################################################################
######################## Import Packages ############################
#####################################################################

import time
start_time = time.time()
import numpy as np
import Functions as Fun
from subprocess import call

#####################################################################
######################## Load all samples ###########################
#####################################################################

with open('94Pu239a') as f:
    Pu239a=f.readlines()
Pu239a=Fun.StripNL(Pu239a)
with open('94Pu240a') as f:
    Pu240a=f.readlines()
Pu240a=Fun.StripNL(Pu240a)
with open('94Pu241a') as f:
    Pu241a=f.readlines()
Pu241a=Fun.StripNL(Pu241a)

with open('94Pu239f') as f:
    Pu239f=f.readlines()
Pu239f=Fun.StripNL(Pu239f)
with open('94Pu240f') as f:
    Pu240f=f.readlines()
Pu240f=Fun.StripNL(Pu240f)
with open('94Pu241f') as f:
    Pu241f=f.readlines()
Pu241f=Fun.StripNL(Pu241f)

with open('92U235a') as f:
    U235a=f.readlines()
U235a=Fun.StripNL(U235a)
with open('92U238a') as f:
    U238a=f.readlines()
U238a=Fun.StripNL(U238a)

with open('92U235f') as f:
    U235f=f.readlines()
U235f=Fun.StripNL(U235f)
with open('92U238f') as f:
    U238f=f.readlines()
U238f=Fun.StripNL(U238f)

#####################################################################
########################### Modify TAPE #############################
#####################################################################

#Open Input File
with open('TAPE9_BANK.inp') as f:
    content=f.readlines()

#Open output file
output=open("TAPE9.inp","w")

        
#Loop through the TAPE9 file, make changes, and write to output
j=0
for i in content:
    hold=i.split()
    if '602' in hold[0] and "-" not in hold[0]:
        if "942390" in hold[1]:
            #Replace the gamma x-section
            i=i.replace(hold[2],Pu239a[j])
            #Replace the fission x-section
            i=i.replace(hold[5],Pu239f[j])
        if "942400" in hold[1]:
            #Replace the gamma x-section
            i=i.replace(hold[2],Pu240a[j])
            #Replace the fission x-section
            i=i.replace(hold[5],Pu240f[j])
        if "942410" in hold[1]:
            #Replace the gamma x-section
            i=i.replace(hold[2],Pu241a[j])
            #Replace the fission x-section
            i=i.replace(hold[5],Pu241f[j])
        if "922350" in hold[1]:
            #Replace the gamma x-section
            i=i.replace(hold[2],U235a[j])
            #Replace the fission x-section
            i=i.replace(hold[5],U235f[j])
        if "922380" in hold[1]:
            #Replace the gamma x-section
            i=i.replace(hold[2],U238a[j])
            #Replace the fission x-section
            i=i.replace(hold[5],U238f[j])
                
    i=i.replace("\n","")
    print(i,file=output)


output.close() #important or ORIGEN2 wont run
#endfile record being detected otherwise
    
#Run with TAPE9
call(["./r"])

#Graboutput print to file

with open('TAPE6.OUT') as f:
    content=f.readlines()

#Work on Page by Page Basis for output
#Grab Time
Pages=[]
TimeDays=[]
PageNum=0
Page=""
for i in content:
    if "PAGE" in i:
        #Save the Page if it has useful information
        if "ACTINIDES+DAUGHTERS" in Page or "FISSION PRODUCTS" in Page:
            Pages.append(Page)
        Page=""
    else:
        Page=Page+i
    if "TIME, SEC" in i:
        i=i.replace("TIME, SEC","")
        i=i.split()
        for j in i:
            TimeDays.append(str(round(float(j)/86400,2)))

#Pages has a list of strings, each with a page on it
#from the output
#The only pages saved in Pages are ones with text:
#"ACTINIDES+DAUGHTERS" or "FISSION PRODUCTS" the rest of the output
#is trashed

#Graboutput print to file
t=Fun.Graboutput("U238",Pages,"ACTINIDES+DAUGHTERS")
print(t)




    
#####################################################################
######################## Time to Execute ############################
#####################################################################

print("--- %s seconds ---" % (time.time() - start_time))

