#!/usr/bin/env python3

"""
Will make N random samples and store in files with same
names as isotopes
"""
#####################################################################
######################## Import Packages ############################
#####################################################################

import time
start_time = time.time()
import numpy as np
import Functions as Fun


#####################################################################
######################## Class For Change ###########################
#####################################################################

class OneGroupwError:
    def __init__(self):
        self.Element   = ""
        self.XSec      = 0     #X Section
        self.Err       = 0     #Error


#####################################################################
##################### Grab all X-sections ###########################
#####################################################################

N=10
Nbins=3

O=[]
with open('OneGroupXSections') as f:
    Lines=f.readlines()
for i in Lines:
    i=i.split()
    O.append(OneGroupwError())
    O[-1].Element = i[0]
    O[-1].XSec    = float(i[1].split('+/-')[0])
    O[-1].Err     = float(i[1].split('+/-')[1])


for i in O:
    #Make Samples
    alpha=(i.XSec**2)/(i.Err**2)
    beta=(i.Err**2)/(i.XSec)
    Sample=np.random.gamma(alpha,beta,size=N)
    #Make histogram plot
    Fun.PlotHistSave(Sample,N,i.Element,Nbins)
    #Convert Data to string
    Sample=[str(x) for x in Sample]
    #open the output file and save
    output=open("SAMPLES/"+i.Element,"w")
    print("\n".join(Sample),file=output)
    output.close()

#####################################################################
######################## Time to Execute ############################
#####################################################################

print("--- %s seconds ---" % (time.time() - start_time))

