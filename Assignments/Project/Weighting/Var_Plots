#!/usr/bin/env python3

#########################################################################
######################## Import Packages ################################
#########################################################################

import time
start_time = time.time()
import Functions as f
from scipy import interpolate
from scipy import integrate
from scipy.integrate import trapz

#########################################################################
########################## Calculations #################################
#########################################################################

#########################################################
############### Import X-Section Data ###################
#########################################################

# (n,g) x section with its variance (x-section first, variance second)
Names=["U_235_92_a.csv","U_235_92_cov.csv"]

#Get Into
Name=Names[0]
NameVar=Names[1]
Element=Name.split('_')[0]
Isotope=Name.split('_')[1]
Protons=Name.split('_')[2]
        
Xsec = f.np.genfromtxt('X_Sections/'+Name,delimiter=',')
Var  = f.np.genfromtxt('X_Sections/'+NameVar,delimiter=',')
#Set energy, and convert from MeV to ev
E=f.copy.copy(Xsec[:,0])*10**6
Evar=f.copy.copy(Var[:,0])*10**6
#Make function for variance, so I can plot with the same
#x axis
Var_int=interpolate.interp1d(Evar,Var[:,1],
                             fill_value=0,bounds_error=False)


#########################################################
################## X-sec Plotting #######################
#########################################################

fig=f.plt.figure(figsize=f.FigureSize)
ax=fig.add_subplot(111)
label="ENDF/B-VII.1: $\sigma_a$ "+Element+"$^{"+Isotope+"}$"
Ylabel='$\sigma$(E)'
(fig,ax)=f.plot(E,Xsec[:,1],ax,'blue',label,fig,Ylabel)

# Make the y-axis label and tick labels match the line color.
# ax1.set_ylabel('exp', color='b')
for tl in ax.get_yticklabels():
    tl.set_color('b')

#########################################################
################## Variance Plot  #######################
#########################################################

ax2=ax.twinx()
label=""
Ylabel='Uncertainty (\%)'
(fig,ax2)=f.plot(Evar,Var[:,1],ax2,'red',label,fig,Ylabel)

# Make the y-axis label and tick labels match the line color.
# ax2.set_ylabel('sin', color='r')
for tl in ax2.get_yticklabels():
    tl.set_color('r')

#########################################################
################### Legend/Save  ########################
#########################################################

f.Legend(ax)
f.plt.savefig('X_Sections/XwVar_'+Element+'_'+Isotope+'.pdf')

##################################################################
######################## Time to Execute #########################
##################################################################

print("--- %s seconds ---" % (time.time() - start_time))
