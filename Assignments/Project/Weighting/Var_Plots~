#!/usr/bin/env python3

#########################################################################
######################## Import Packages ################################
#########################################################################

import time
start_time = time.time()
import Functions as f
from scipy import interpolate
from scipy import integrate
from scipy.integrate import trapz

#########################################################################
########################## Calculations #################################
#########################################################################

#########################################################
############### Import X-Section Data ###################
#########################################################

# (n,g) x section with its variance (x-section first, variance second)
Names=["U_235_92_a.csv","U_235_92_cov.csv"]

#Get Into
Name=Names[0]
Element=Name.split('_')[0]
Isotope=Name.split('_')[1]
Protons=Name.split('_')[2]
        
Xsec = f.np.genfromtxt('X_Sections/'+Name,delimiter=',')
#Set energy, and convert from MeV to ev
E=f.copy.copy(Xsec[:,0])*10**6



# fig, ax1 = plt.subplots()
# t = np.arange(0.01, 10.0, 0.01)
# s1 = np.exp(t)
# ax1.plot(t, s1, 'b-')
# ax1.set_xlabel('time (s)')
# # Make the y-axis label and tick labels match the line color.
# ax1.set_ylabel('exp', color='b')
# for tl in ax1.get_yticklabels():
#     tl.set_color('b')


# ax2 = ax1.twinx()
# s2 = np.sin(2*np.pi*t)
# ax2.plot(t, s2, 'r.')
# ax2.set_ylabel('sin', color='r')
# for tl in ax2.get_yticklabels():
#     tl.set_color('r')
#     plt.show()


#########################################################
################## X-sec Plotting #######################
#########################################################

fig=f.plt.figure(figsize=f.FigureSize)
ax=fig.add_subplot(111)
label="$\sigma_a$ "+Element+"$^{"+Isotope+"}$"
Ylabel='$\sigma$(E)'    # Y label
    
(fig,ax)=f.plot(E,Xsec[:,1],ax,'blue',label,fig,Ylabel)
f.Legend(ax)
f.plt.savefig('X_Sections/XwVar_'+Element+'_'+Isotope+'.pdf')

##################################################################
######################## Time to Execute #########################
##################################################################

print("--- %s seconds ---" % (time.time() - start_time))
